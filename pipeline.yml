# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '36792dfc-ef4d-42b8-b410-868f218b9ba8'
  imageRepository: 'alejandrotellocvcreator'
  containerRegistry: 'atelloregistry.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'atelloregistry1995f9d1-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Add these variables to match your Docker Compose setup
  frontendContext: './frontend'
  backendContext: './backend'
  nginxContext: './nginx'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - upload: manifests
      artifact: manifests

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'alejandrotello7cvcreator-3490.default'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)a
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - script: |
              kubectl apply -f $(frontendContext)/k8s-deployment.yml
              kubectl apply -f $(backendContext)/k8s-deployment.yml
              kubectl apply -f $(nginxContext)/k8s-deployment.yml
            displayName: Deploy to Kubernetes cluster
